{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/api/request.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","BASE_URL","request","title","fetch","json","result","FindMovie","callbackForMovies","moviesPrev","useState","movieForFind","setMovieForFind","preview","setPreview","isFilmValid","setIsFilmValid","toLowerCase","Response","undefined","htmlFor","type","id","placeholder","value","classNames","onChange","event","target","onClick","finder","find","el","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"uTAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAa,UAAQ,aAApC,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,cAAlC,SAAiDD,EAAMK,aAI3D,sBAAKJ,UAAU,UAAU,UAAQ,UAAjC,UACGD,EAAMM,KACP,iCC3BGC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,sCCbfC,EAAW,6CAEV,SAAeC,EAAtB,kC,sDAAO,WAAuBC,GAAvB,iGACuBC,MAAM,GAAD,OAAIH,EAAJ,cAAkBE,IAD9C,8BACwDE,OADxD,cACCC,EADD,yBAGEA,GAHF,4C,gCCSMC,EAA6B,SAAC,GAErC,IADFC,EACC,EADDA,kBAAmBC,EAClB,EADkBA,WAErB,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8BF,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAHG,sDAKH,8GACuBd,EAAQS,EAAaM,eAD5C,OAG0B,WAFlBX,EADR,QAGaY,SACTJ,EAAWR,IAEXM,EAAgB,IAChBE,OAAWK,GACXH,GAAe,IARnB,4CALG,sBAiBH,OACE,qCACE,uBAAMzB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ6B,QAAQ,cAAjC,yBAIA,qBAAK7B,UAAU,UAAf,SACE,uBACE8B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZC,MAAOb,EACPpB,UAAWkC,IAAW,QAAS,CAAE,aAAcV,IAC/CW,SAAU,SAACC,GACTf,EAAgBe,EAAMC,OAAOJ,aAKhCT,GAED,mBAAGxB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE8B,KAAK,SACL9B,UAAU,kBACVsC,QAAS,YAnDlB,mCAoDWC,GACAlB,EAAgB,KALpB,4BAYF,qBAAKrB,UAAU,UAAf,SACE,wBACE8B,KAAK,SACL9B,UAAU,oBACVsC,QAAS,WACHhB,IACGJ,EAAWsB,MAAK,SAAAC,GAAE,OAAIA,EAAGhC,SAAWa,EAAQb,YAC/CQ,EAAkB,GAAD,mBAAKC,GAAL,CAAiBI,KAClCC,OAAWK,MAPnB,qCAkBN,sBAAK5B,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACEsB,GACC,cAAC,EAAD,CAAWvB,MAAOuB,WC1FhBoB,EAAgB,WAC3B,MAA4BvB,mBAAkB,IAA9C,mBAAOZ,EAAP,KAAeoC,EAAf,KAEA,OACE,sBAAK3C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWiB,kBAAmB0B,EAAWzB,WAAYX,UCV7DqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.47878f9f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=2d2038e9&?';\n\nexport async function request(title : string) {\n  const result = await (await fetch(`${BASE_URL}&t=${title}`)).json();\n\n  return result;\n}\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { request } from '../api/request';\nimport { MovieCard } from '../MovieCard/MovieCard';\nimport './FindMovie.scss';\n\ninterface Props {\n  callbackForMovies: (arg0 : Movie[]) => void;\n  moviesPrev: Movie[];\n}\n\nexport const FindMovie: React.FC<Props> = (\n  { callbackForMovies, moviesPrev },\n) => {\n  const [movieForFind, setMovieForFind] = useState('');\n  const [preview, setPreview] = useState<Movie>();\n  const [isFilmValid, setIsFilmValid] = useState(true);\n\n  async function finder() {\n    const result = await request(movieForFind.toLowerCase());\n\n    if (result.Response !== 'False') {\n      setPreview(result);\n    } else {\n      setMovieForFind('');\n      setPreview(undefined);\n      setIsFilmValid(false);\n    }\n  }\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={movieForFind}\n              className={classNames('input', { 'is-danger': !isFilmValid })}\n              onChange={(event) => {\n                setMovieForFind(event.target.value);\n              }}\n            />\n          </div>\n\n          { !isFilmValid\n          && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                finder();\n                setMovieForFind('');\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (preview) {\n                  if (!moviesPrev.find(el => el.imdbID === preview.imdbID)) {\n                    callbackForMovies([...moviesPrev, preview]);\n                    setPreview(undefined);\n                  }\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        { preview\n        && <MovieCard movie={preview} />}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie callbackForMovies={setMovies} moviesPrev={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}